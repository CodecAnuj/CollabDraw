// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  username  String   @unique
  password  String
  avatar    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  createdRooms Room[]        @relation("RoomCreator")
  roomMembers  RoomMember[]
  chatMessages ChatMessage[]

  @@map("users")
}

model Room {
  id          String   @id @default(cuid())
  name        String
  description String?
  isPublic    Boolean  @default(true)
  maxUsers    Int      @default(10)
  createdById String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  creator      User          @relation("RoomCreator", fields: [createdById], references: [id], onDelete: Cascade)
  members      RoomMember[]
  chatMessages ChatMessage[]

  @@map("rooms")
}

model RoomMember {
  id       String   @id @default(cuid())
  userId   String
  roomId   String
  role     Role     @default(MEMBER)
  joinedAt DateTime @default(now())

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  room Room @relation(fields: [roomId], references: [id], onDelete: Cascade)

  // Unique constraint - ek user ek room mein sirf ek baar join kar sakta hai
  @@unique([userId, roomId])
  @@map("room_members")
}

model ChatMessage {
  id        String   @id @default(cuid())
  content   String
  userId    String
  roomId    String
  createdAt DateTime @default(now())

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  room Room @relation(fields: [roomId], references: [id], onDelete: Cascade)

  @@map("chat_messages")
}

enum Role {
  OWNER
  ADMIN
  MEMBER
}
